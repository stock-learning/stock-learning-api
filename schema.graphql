scalar DateTime

schema {
    query: Query
    subscription: Subscription
}

type Query {
    testeQuery: String
    login(username: String!, password: String!): LoginOutput!
    flutterTeste(name: String): FlutterTesteOutput
    companyData(id: String): CompanyData
    userFollowCompany(companyId: String): Boolean
    companyStockCurrentValue(companyId: String): Float
    tweets(companyId: String): [Tweet]
}

type Subscription {
    newLiveUpdate: NewLiveUpdateOutput
}

# Inputs

# Outputs

type LoginOutput {
    success: Boolean!
    token: String
}

type FlutterTesteOutput {
    message: String
}

type NewLiveUpdateOutput {
    message: String
}

# Documents
type CompanyData {
    id: String!
    initials: String!
    name: String
    logoUrl: String
    type: String
    sector: String
    description: String
}

type Tweet {
    account: String
    tweet: String
    cleanText: String
    createdAt: DateTime
    statusId: String
    sentiment: String
    relatedInitials: [String]
}
